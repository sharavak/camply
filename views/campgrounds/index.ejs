<% layout('/layouts/boilerplate') %>
<a href="#cluster-map" class="link-primary text-white btn btn-primary">Show Map</a>
<h1 class="text-center mt-3">All Campgrounds</h1>
<div class="container my-4">
  <% for (let campground of campgrounds) { %>
    <div class="card mb-4 shadow-sm border-0">
      <div class="row g-0 flex-column flex-lg-row">
        
        <div class="col-12 col-lg-5 position-relative">
          <img 
            src="<%= campground.images[0]?.url || 'https://via.placeholder.com/700x500?text=No+Image' %>" 
            class="img-fluid rounded-top-4 rounded-lg-start-4" 
            alt="Campground" 
            style="height: 100%; object-fit: cover; width:100%; max-height:300px;"
          />
          
          <form action="/campgrounds/fav/?id=<%= campground._id %>" method="POST" class="favForm position-absolute top-0 end-0 p-3 bookmark-btn">
            <button type="submit" class="border-0 bg-transparent p-0 ">
              <i class="<%= user && user.favourites.includes(campground._id) 
                        ? 'fa-solid fa-bookmark text-primary' 
                        : 'fa-regular fa-bookmark' %>"></i>
            </button>
          </form>
        </div>
        
        <div class="col-12 col-lg-7">
          <div class="card-body d-flex flex-column h-100 align-items-center">
            
            <h5 class="card-title fw-bold mb-2"><%= campground.title %></h5>
            <p class="card-text text-muted mb-3">
              <%= campground.description?.substring(0, 25)%> ...
            </p>
            
            <div class="d-flex flex-wrap gap-4 text-secondary mb-4 small">
              <span><i class="fa-solid fa-location-dot me-1 text-secondary"></i><%= campground.location %></span>
              <span><i class="fa-solid fa-calendar-days me-1 text-primary"></i><%= campground.date %></span>
            </div>
            
            <a href="/campgrounds/<%= campground._id %>" class="btn btn-viewCampground w-50 mb-3 align-self-start">
            View Campground
            </a>
            
            <div class="mt-auto d-flex align-items-center gap-4">
              <form action="/campgrounds/likes/?id=<%= campground._id %>" method="POST" class="likeForm">
                <button class="btn p-0 border-0 bg-transparent text-danger">
                  <i class="fa-solid fa-heart me-1"></i><%= campground.likes.length %>
                </button>
              </form>
              <span class="text-dark small">
                <i class="fa-solid fa-eye me-1 p-0  border-0"></i><%= campground.views %>
              </span>
            </div>
            
          </div>
        </div>
        
      </div>
    </div>
  <% } %>
</div>
  
<div id="cluster-map"></div>
<nav aria-label="Page navigation" class="mx-auto d-flex justify-content-center mb-2">
    <ul class="pagination pagination-sm mt-2">
        <% if(prev>0) { %>
        <li class="page-item">
            <% } else { %>
        </li>

        <li class="page-item disabled">
            <% } %>
            <a class="page-link" href="/campgrounds/?page=<%= prev %>" aria-label="Previous" id="next">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <% for(let i=(10*idx+rem)-1;i<(10*(idx+1))+rem;i++) { %> <% if(i<campgroundsLength/10 && i>=0) {%> <% if(i+1===parseInt(prev)+1) { %>
        <li class="page-item active"><a class="page-link" href="/campgrounds/?page=<%= i+1 %>"> <%= i+1 %> </a></li>
        <% }else { %>
        <li class="page-item"><a class="page-link" href="/campgrounds/?page=<%= i+1 %>"> <%= i+1 %> </a></li>
        <% } %> <% } %> <% } %> <% if(next>campgroundsLength/10) { %>
        <li class="page-item disabled">
            <% } else { %>
        </li>

        <li class="page-item">
            <% } %>
            <a class="page-link" href="/campgrounds/?page=<%= next %>" aria-label="Next" id="next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
<div class="chatbot-toggle" onclick="toggleChat()">🤖</div>
<div class="chatbot-box" id="chatbotBox" style="display: none;">
    <div class="chatbot-header">
        <span>Chatbot</span>
        <button onclick="toggleChat()" class="close">✖</button>
    </div>
    <div class="chatbot-body" id="chatBody">
        <p>Hello! How can I help you?</p>
    </div>
    <div class="chatbot-input">
        <input type="text" id="chatInput" placeholder="Type your message..." onkeydown="if(event.key === 'Enter') sendMessage()" />
        <button id="sendBut" onclick="sendMessage()">➤</button>
    </div>
</div>
<style>
    .like {
        color: green;
        border: none;
        background-color: transparent;
    }
    .like:hover {
        transition: all;
        transform: scale(1.2);
    }
    .chatbot-header .close {
        border-radius: 50%;
        border: none;
    }
    .chatbot-toggle {
        position: fixed;
        bottom: 20px;
        right: 0px;
        font-size: 20px;
        background-color: #16a257;
        color: white;
        padding: 10px 15px;
        border-radius: 50%;
        cursor: pointer;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        z-index: 1001;
        transition: all;
    }
    .chatbot-toggle:hover {
        background-color: #006fd3;
    }
    .chatbot-box {
        position: fixed;
        bottom: 90px;
        right: 20px;
        width: 300px;
        height: 400px;
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        display: none;
        flex-direction: column;
        overflow: hidden;
        z-index: 1000;
        display: flex;
        flex-direction: column;
    }
    .chatbot-header {
        background: #131615;
        color: white;
        padding: 10px;
        font-weight: bold;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande", "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
    }
    .chatbot-body {
        flex: 1;
        padding: 10px;
        overflow-y: auto;
        font-size: 14px;
    }
    .chatbot-input {
        display: flex;
        padding: 10px;
        border-top: 1px solid #ddd;
    }
    .chatbot-input input {
        flex: 1;
        padding: 8px;
        font-size: 14px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
    .chatbot-input button {
        background-color: #0f1011;
        color: white;
        border: none;
        padding: 8px 12px;
        margin-left: 5px;
        border-radius: 4px;
        cursor: pointer;
    }
    .chatbot-input button:hover {
        background-color: #006fd3;
    }
    .pagination .page-link {
        border-radius: 10px;
        margin: 0 4px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: all 0.2s ease;
    }
    .pagination .page-link:hover {
        background-color: #0d6efd;
        color: white;
    }
    .card-img-top {
        height: 200px;
        object-fit: cover;
        border-radius: 10px 10px 0 0;
    }

    .card-title {
        font-weight: 600;
    }

    .card-footer i {
        font-size: 1.2rem;
        cursor: pointer;
        transition: color 0.2s ease;
    }

    .card-footer i:hover {
    color: #0d6efd;
    }
    .bookmark-btn {
        position: absolute;
        top: 0.75rem;
        right: 0.75rem;
        background: rgba(255, 255, 255, 0);
        border: none;
        padding: 0.4rem;
        
        transition: background-color 0.2s, transform 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10;
    }

    .bookmark-btn i {
        font-size: 1.2rem;       
        color: #0d6efd;       
        transition: color 0.2s;
    }

    .bookmark-btn:hover {
        background: #fff;
        transform: scale(1.1);
        border-radius: 50%;
    }

    .bookmark-btn:hover i {
        color: #0d6efd;          
    }

    .bookmark-btn:focus {
        outline: none;
        box-shadow: 0 0 0 0.25rem rgba(13,110,253,0.25);
    }

    .btn-viewCampground {
        width: 40%;
        background-color: #007bff; 
        color: white; 
        font-weight: bold; 
        padding: 4px 8px; 
        text-align: center; 
        border-radius: 12px; 
        text-transform: uppercase; 
        box-shadow: 0px 4px 6px rgba(0, 123, 255, 0.3); 
        transition: background-color 0.3s, transform 0.3s; 
        margin: auto;
    }

    .btn-viewCampground:hover {
        background-color: #0056b3; 
        transform: translateY(-2px); 
        color: white;
    }

    .btn-viewCampground:focus {
        outline: none;
        box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.5); 
    }



</style>
<script>
    const mapToken = '<%- process.env.MAPBOX_TOKEN %>';
    const campgrounds = { features:<%-JSON.stringify(campgrounds)%>};
</script>
<script>
    let sendButton = document.querySelector("#sendBut");
    let likes = document.querySelectorAll(".likeForm");
    let fav=document.querySelectorAll(".favForm")
    for (let i = 0; i < likes.length; i++) {
        likes[i].addEventListener("submit", async function (e) {
            e.preventDefault();
            let res = await fetch(likes[i].action, {
                method: "POST",
                body: JSON.stringify({ id: likes[i].action.split("=")[1] }),
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json",
                },
            });

            res = await res.json();
            if ("success" in res) {
                likes[i].children[0].innerText = `❤️ ${res["success"]}`;
                if(!res['liked'])
                    showToast("Liked!",'success')
                else
                    showToast("Could not like!",'warning')
            }else{
                showToast("Sign in to like!",'danger')
            }
        });
    }

    for (let i = 0; i < fav.length; i++) {
        fav[i].addEventListener("submit", async function (e) {
            e.preventDefault();
            let res = await fetch(fav[i].action, {
                method: "POST",
                body: JSON.stringify({ id: fav[i].action.split("=")[1] }),
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json",
                },
            });

            res = await res.json();
            if ("success" in res) {
                let isFav=res.isFav

                if(isFav){
                    fav[i].children[0].children[0].className='fa-solid fa-bookmark'
                    showToast("Bookmarked!!!",'success')
                }
                else{
                    fav[i].children[0].children[0].className='fa-regular fa-bookmark'
                    showToast("Removed!!!",'warning')
                }
            }else{
                showToast("Sign in to Bookmark!",'danger')
            }
        });
    }


    function toggleChat() {
        const chatbox = document.getElementById("chatbotBox");
        chatbox.style.display = chatbox.style.display === "none" || chatbox.style.display === "" ? "flex" : "none";
    }

    async function sendMessage() {}
    sendButton.addEventListener("click", async () => {
        const input = document.getElementById("chatInput");
        const chatBody = document.getElementById("chatBody");
        const userMessage = input.value.trim();

        if (userMessage === "") return;

        const userBubble = document.createElement("p");
        userBubble.style.textAlign = "right";
        userBubble.innerHTML = `<strong>You:</strong> ${userMessage}`;
        chatBody.appendChild(userBubble);
        chatBody.scrollTop = chatBody.scrollHeight;
        const botBubble = document.createElement("p");
        let res = await fetch(window.location.origin + "/chat", {
            method: "post",
            body: JSON.stringify({ input: input.value }),
            headers: {
                Accept: "application/json",
                "Content-Type": "application/json",
            },
        });

        res = await res.json();
        input.value = "";
        botBubble.innerHTML = `<strong>Bot:</strong><br><div style="white-space: pre-wrap; padding: 8px; background: #f5f5f5; border-radius: 8px; max-height: 300px; overflow-y: auto;font-family"">${res.output}</div>`;
        chatBody.appendChild(botBubble);
        chatBody.scrollTop = chatBody.scrollHeight;
    });
</script>
<script src="/javascripts/clusterMap.js"></script>
